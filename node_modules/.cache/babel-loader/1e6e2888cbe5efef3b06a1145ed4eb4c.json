{"ast":null,"code":"var _jsxFileName = \"/home/hsetiawan/git-android/star-wars-movie-with-react/src/list/list.js\";\nimport React, { Component } from 'react';\nimport Character from './character/character.js';\nimport Planets from './planet/planet.js';\nimport Species from './species/species.js';\nimport Starships from './starship/starship.js';\nimport Vehicles from './vehicles/vehicles.js';\nimport './list.scss';\n\nclass List extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      films: {},\n      isLoading: true,\n      error: null\n    };\n  }\n\n  fetchFilms() {\n    fetch(\"https://swapi.co/api/films/?format=json\").then(response => response.json()).then(data => this.setState({\n      films: data.results,\n      isLoading: false\n    })).catch(error => this.setState({\n      error,\n      isLoading: false\n    }));\n  }\n\n  componentDidMount() {\n    this.fetchFilms();\n  }\n\n  handleChange(event) {\n    this.setState({\n      value: event.target.data\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          isLoading = _this$state.isLoading,\n          films = _this$state.films,\n          error = _this$state.error;\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, error ? React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, error.message) : null, !isLoading ? films.map(film => {\n      const title = film.title,\n            episode_id = film.episode_id,\n            director = film.director,\n            producer = film.producer,\n            release_date = film.release_date;\n      return React.createElement(\"div\", {\n        key: title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"select\", {\n        className: \"select\",\n        value: this.state.value,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, films && films.length > 0 && films.map(film => {\n        return React.createElement(\"option\", {\n          value: \"${film.value}\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }, film.title);\n      })), React.createElement(\"div\", {\n        className: \"body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"Tittle: \", title), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \"episode id: \", episode_id), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"director: \", director), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \"producer: \", producer), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"release date: \", release_date), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"caracter: \", React.createElement(Character, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      })), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"planet: \", React.createElement(Planets, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      })), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"starships: \", React.createElement(Starships, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      })), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"vehicles: \", React.createElement(Vehicles, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      })), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \"species: \", React.createElement(Species, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }))));\n    }) : React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Loading...\"));\n  }\n\n}\n\nexport default List;","map":{"version":3,"sources":["/home/hsetiawan/git-android/star-wars-movie-with-react/src/list/list.js"],"names":["React","Component","Character","Planets","Species","Starships","Vehicles","List","constructor","props","state","films","isLoading","error","fetchFilms","fetch","then","response","json","data","setState","results","catch","componentDidMount","handleChange","event","value","target","render","message","map","film","title","episode_id","director","producer","release_date","length"],"mappings":"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","sourcesContent":["import React,{Component} from 'react';\nimport Character from './character/character.js';\nimport Planets from './planet/planet.js';\nimport Species from './species/species.js';\nimport Starships from './starship/starship.js';\nimport Vehicles from './vehicles/vehicles.js';\nimport './list.scss';\nclass List extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      films: {},\n      isLoading: true,\n      error: null\n    };\n  }\n\n  fetchFilms() {\n  fetch(`https://swapi.co/api/films/?format=json`)\n    .then(response => response.json())\n    .then(data =>\n      this.setState({\n        films: data.results,\n        isLoading: false,\n      })\n    )\n    .catch(error => this.setState({ error, isLoading: false }));\n  }\n\n  componentDidMount() {\n    this.fetchFilms();\n  }\n\n  handleChange(event) {\n       this.setState({value: event.target.data});\n     }\n\n  render() {\n    const { isLoading, films, error } = this.state;\n      return (\n        <React.Fragment>\n              {error ? <p>{error.message}</p> : null}\n              {!isLoading ? (\n              films.map(film => {\n                const { title, episode_id, director, producer, release_date } = film;\n                return (\n                  <div key={title}>\n                  <select className=\"select\" value={this.state.value} onChange={this.handleChange}>\n                  {\n                   (films && films.length > 0) && films.map((film) => {\n                     return (<option value=\"${film.value}\">{film.title}</option>);\n                   })\n                 }\n                  </select>\n                  <div className=\"body\">\n                    <h3>Tittle: {title}</h3>\n                    <p>episode id: {episode_id}</p>\n                    <p>director: {director}</p>\n                    <p>producer: {producer}</p>\n                    <p>release date: {release_date}</p>\n                    <p>caracter: <Character /></p>\n                    <p>planet: <Planets /></p>\n                    <p>starships: <Starships /></p>\n                    <p>vehicles: <Vehicles /></p>\n                    <p>species: <Species /></p>\n                  </div>\n                  </div>\n                );\n              })\n              ) : (\n              <h3>Loading...</h3>\n              )}\n\n        </React.Fragment>\n      );\n    }\n\n}\n\nexport default List;\n"]},"metadata":{},"sourceType":"module"}